# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.x]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        wget https://github.com/Sigill/gcc-warnings/archive/master.tar.gz -O- | tar -xz -C /tmp/
        pip install /tmp/gcc-warnings-master/
        pip install -e .
    - name: Cache Cppcheck 2.1
      id: cache-cppcheck21
      uses: actions/cache@v2
      with:
        path: .cppcheck-2.1
        key: ${{ matrix.os }}-cppcheck21
    - name: Install Cppcheck 2.1
      if: steps.cache-cppcheck21.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/danmar/cppcheck/archive/2.1.tar.gz -O- | tar -xz
        cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=$PWD/.cppcheck-2.1 -DHAVE_RULES=ON -S cppcheck-2.1 -B cppcheck-2.1-bld
        cmake --build cppcheck-2.1-bld -j 2 --target install
        rm -rf cppcheck-2.1 cppcheck-2.1-bld
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=150 --statistics --extend-exclude '.*'
    - name: Run unit tests
      run: |
        export PATH=$PWD/.cppcheck-2.1/bin:$PATH
        ./test/test.py